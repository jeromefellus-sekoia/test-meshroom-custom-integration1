cloudflare.BotScore:
  description: Cloudflare Bot Score. Scores below 30 are commonly associated with
    automated traffic. Available for Bot Management customers (please contact your
    account team to enable).
  name: cloudflare.BotScore
  type: number

cloudflare.BotScoreSrc:
  description: Detection engine responsible for generating the Bot Score. Possible
    values are Not Computed \| Heuristics \| Machine Learning \| Behavioral Analysis
    \| Verified Bot \| JS Fingerprinting \| Cloudflare Service
  name: cloudflare.BotScoreSrc
  type: string

cloudflare.BotTags:
  description: Type of bot traffic (if available). Refer to [Bot Tags](/bots/concepts/cloudflare-bot-tags/)
    for the list of potential values. Available in Logpush v2 only. |
  name: cloudflare.BotTags
  type: object

cloudflare.CacheCacheStatus:
  description: Cache status. Possible values are unknown \| miss \| expired \| updating
    \| stale \| hit \| ignored \| bypass \| revalidated \| dynamic \| stream_hit \|
    deferred "dynamic" means that a request is not eligible for cache. This can mean,
    for example that it was blocked by the firewall. Refer to [Cloudflare cache responses](/cache/about/default-cache-behavior/#cloudflare-cache-responses)
    for more details.
  name: cloudflare.CacheCacheStatus
  type: string

cloudflare.CacheResponseBytes:
  description: Number of bytes returned by the cache
  name: cloudflare.CacheResponseBytes
  type: number

cloudflare.CacheResponseStatus:
  description: (deprecated) | HTTP status code returned by the cache to the edge.
    All requests (including non-cacheable ones) go through the cache. Refer also to
    CacheCacheStatus field.
  name: cloudflare.CacheResponseStatus
  type: number

cloudflare.CacheTieredFill:
  description: Tiered Cache was used to serve this request
  name: cloudflare.CacheTieredFill
  type: bool

cloudflare.ClientASN:
  description: Client AS number
  name: cloudflare.ClientASN
  type: number

cloudflare.ClientCountry:
  description: Country of the client IP address
  name: cloudflare.ClientCountry
  type: string

cloudflare.ClientDeviceType:
  description: Client device type
  name: cloudflare.ClientDeviceType
  type: string

cloudflare.ClientIP:
  description: IP address of the client
  name: cloudflare.ClientIP
  type: string

cloudflare.ClientIPClass:
  description: unknown \| badHost \| searchEngine \| allowlist \| monitoringService
    \| noRecord \| scan \| tor
  name: cloudflare.ClientIPClass
  type: string

cloudflare.ClientMTLSAuthCertFingerprint:
  description: The SHA256 fingerprint of the certificate presented by the client during
    mTLS authentication. Only populated on the first request on an mTLS connection.
    Available in Logpush v2 only.
  name: cloudflare.ClientMTLSAuthCertFingerprint
  type: string

cloudflare.ClientMTLSAuthStatus:
  description: The status of mTLS authentication. Only populated on the first request
    on an mTLS connection. Available in Logpush v2 only. Possible values are unknown
    \| ok \| absent \| untrusted \| notyetvalid \| expired
  name: cloudflare.ClientMTLSAuthStatus
  type: string

cloudflare.ClientRequestBytes:
  description: Number of bytes in the client request
  name: cloudflare.ClientRequestBytes
  type: number

cloudflare.ClientRequestHost:
  description: Host requested by the client
  name: cloudflare.ClientRequestHost
  type: string

cloudflare.ClientRequestMethod:
  description: HTTP method of client request
  name: cloudflare.ClientRequestMethod
  type: string

cloudflare.ClientRequestPath:
  description: URI path requested by the client
  name: cloudflare.ClientRequestPath
  type: string

cloudflare.ClientRequestProtocol:
  description: HTTP protocol of client request
  name: cloudflare.ClientRequestProtocol
  type: string

cloudflare.ClientRequestReferer:
  description: HTTP request referrer
  name: cloudflare.ClientRequestReferer
  type: string

cloudflare.ClientRequestScheme:
  description: The URL scheme requested by the visitor. Available in Logpush v2 only.
  name: cloudflare.ClientRequestScheme
  type: string

cloudflare.ClientRequestSource:
  description: Identifies requests as coming from an external source or another service
    within Cloudflare. Refer to [ClientRequestSource field](/logs/reference/clientrequestsource/)
    for the list of potential values. Available in Logpush v2 only.
  name: cloudflare.ClientRequestSource
  type: string

cloudflare.ClientRequestURI:
  description: URI requested by the client
  name: cloudflare.ClientRequestURI
  type: string

cloudflare.ClientRequestUserAgent:
  description: User agent reported by the client
  name: cloudflare.ClientRequestUserAgent
  type: string

cloudflare.ClientSSLCipher:
  description: Client SSL cipher
  name: cloudflare.ClientSSLCipher
  type: string

cloudflare.ClientSSLProtocol:
  description: Client SSL (TLS) protocol. The value "none" means that SSL was not
    used.
  name: cloudflare.ClientSSLProtocol
  type: string

cloudflare.ClientSrcPort:
  description: Client source port
  name: cloudflare.ClientSrcPort
  type: number

cloudflare.ClientTCPRTTMs:
  description: The smoothed average of TCP round-trip time (SRTT). For the initial
    request on a connection, this is measured only during connection setup. For a
    subsequent request on the same connection, it is measured over the entire connection
    lifetime up until the time that request is received. Available in Logpush v2 only.
  name: cloudflare.ClientTCPRTTMs
  type: number

cloudflare.ClientXRequestedWith:
  description: X-Requested-With HTTP header
  name: cloudflare.ClientXRequestedWith
  type: string

cloudflare.Cookies:
  description: String key-value pairs for Cookies
  name: cloudflare.Cookies
  type: object

cloudflare.EdgeCFConnectingO2O:
  description: True if the request looped through multiple zones on the Cloudflare
    edge. This is considered an orange to orange (o2o) request. Available in Logpush
    v2 only.
  name: cloudflare.EdgeCFConnectingO2O
  type: bool

cloudflare.EdgeColoCode:
  description: IATA airport code of data center that received the request
  name: cloudflare.EdgeColoCode
  type: keyword

cloudflare.EdgeColoID:
  description: Cloudflare edge colo id
  name: cloudflare.EdgeColoID
  type: number

cloudflare.EdgeEndTimestamp:
  description: Timestamp at which the edge finished sending response to the client  int
    or
  name: cloudflare.EdgeEndTimestamp
  type: keyword

cloudflare.EdgePathingOp:
  description: Indicates what type of response was issued for this request (unknown
    = no specific action)
  name: cloudflare.EdgePathingOp
  type: keyword

cloudflare.EdgePathingSrc:
  description: Details how the request was classified based on security checks (unknown
    = no specific classification)
  name: cloudflare.EdgePathingSrc
  type: keyword

cloudflare.EdgePathingStatus:
  description: Indicates what data was used to determine the handling of this request
    (unknown = no data)
  name: cloudflare.EdgePathingStatus
  type: keyword

cloudflare.EdgeRateLimitAction:
  description: The action taken by the blocking rule; empty if no action taken. Possible
    values are unknown \ simulate \ ban \ challenge \ jsChallenge
  name: cloudflare.EdgeRateLimitAction
  type: keyword

cloudflare.EdgeRateLimitID:
  description: The internal rule ID of the rate-limiting rule that triggered a block
    (ban) or log action. 0 if no action taken.
  name: cloudflare.EdgeRateLimitID
  type: number

cloudflare.EdgeRequestHost:
  description: Host header on the request from the edge to the origin
  name: cloudflare.EdgeRequestHost
  type: keyword

cloudflare.EdgeResponseBodyBytes:
  description: Size of the HTTP response body returned to clients. Available in Logpush
    v2 only.
  name: cloudflare.EdgeResponseBodyBytes
  type: number

cloudflare.EdgeResponseBytes:
  description: Number of bytes returned by the edge to the client
  name: cloudflare.EdgeResponseBytes
  type: number

cloudflare.EdgeResponseCompressionRatio:
  description: Edge response compression ratio
  name: cloudflare.EdgeResponseCompressionRatio
  type: float

cloudflare.EdgeResponseContentType:
  description: Edge response Content-Type header value
  name: cloudflare.EdgeResponseContentType
  type: keyword

cloudflare.EdgeResponseStatus:
  description: HTTP status code returned by Cloudflare to the client
  name: cloudflare.EdgeResponseStatus
  type: number

cloudflare.EdgeServerIP:
  description: IP of the edge server making a request to the origin. Possible responses
    are keyword in IPv4 or IPv6 format, or empty keyword. Empty keyword means that
    there was no request made to the origin server.
  name: cloudflare.EdgeServerIP
  type: keyword

cloudflare.EdgeStartTimestamp:
  description: Timestamp at which the edge received request from the client  int or
  name: cloudflare.EdgeStartTimestamp
  type: keyword

cloudflare.EdgeTimeToFirstByteMs:
  description: Total view of Time To First Byte as measured at Cloudflare's edge.
    Starts after a TCP connection is established and ends when Cloudflare begins returning
    the first byte of a response to eyeballs. Includes TLS handshake time (for new
    connections) and origin response time. Available in Logpush v2 only.
  name: cloudflare.EdgeTimeToFirstByteMs
  type: number

cloudflare.FirewallMatchesActions:
  description: Array of actions the Cloudflare firewall products performed on this
    request. The individual firewall products associated with this action be found
    in FirewallMatchesSources and their respective RuleIds can be found in FirewallMatchesRuleIDs.
    The length of the array is the same as FirewallMatchesRuleIDs and FirewallMatchesSources.
    Possible actions are unknown \ allow \ block \ challenge \ jschallenge \ log \
    connectionClose \ challengeSolved \ challengeFailed \ challengeBypassed \ jschallengeSolved
    \ jschallengeFailed \ jschallengeBypassed \ bypass \ managedChallenge \ managedChallengeSkipped
    \ managedChallengeNonInteractiveSolved \ managedChallengeInteractiveSolved \ managedChallengeBypassed  array[
  name: cloudflare.FirewallMatchesActions
  type: keyword

cloudflare.FirewallMatchesRuleIDs:
  description: Array of RuleIDs of the firewall product that has matched the request.
    The firewall product associated with the RuleID can be found in FirewallMatchesSources.
    The length of the array is the same as FirewallMatchesActions and FirewallMatchesSources.  array[
  name: cloudflare.FirewallMatchesRuleIDs
  type: keyword

cloudflare.FirewallMatchesSources:
  description: The firewall products that matched the request. The same product can
    appear multiple times, which indicates different rules or actions that were activated.
    The RuleIDs can be found in FirewallMatchesRuleIDs, the actions can be found in
    FirewallMatchesActions. The length of the array is the same as FirewallMatchesRuleIDs
    and FirewallMatchesActions. Validation matches only appear in Logpush and are
    not supported in Logpull. Possible sources are unknown \ asn \ country \ ip \
    ipRange \ securityLevel \ zoneLockdown \ waf \ firewallRules \ uaBlock \ rateLimit
    \ bic \ hot \ l7ddos \ validation \ botFight \ apiShield \ botManagement \ dlp
    \ firewallManaged \ firewallCustom  array[
  name: cloudflare.FirewallMatchesSources
  type: keyword

cloudflare.JA3Hash:
  description: The MD5 hash of the JA3 fingerprint used to profile SSL/TLS clients.
    Available in Logpush v2 only.
  name: cloudflare.JA3Hash
  type: keyword

cloudflare.OriginDNSResponseTimeMs:
  description: Time taken to receive a DNS response for an origin name. Usually takes
    a few milliseconds, but may be longer if a CNAME record is used. Available in
    Logpush v2 only.
  name: cloudflare.OriginDNSResponseTimeMs
  type: number

cloudflare.OriginIP:
  description: IP of the origin server
  name: cloudflare.OriginIP
  type: keyword

cloudflare.OriginRequestHeaderSendDurationMs:
  description: Time taken to send request headers to origin after establishing a connection.
    Note that this value is usually 0. Available in Logpush v2 only.
  name: cloudflare.OriginRequestHeaderSendDurationMs
  type: number

cloudflare.OriginResponseBytes:
  description: deprecated)  Number of bytes returned by the origin server
  name: cloudflare.OriginResponseBytes
  type: number

cloudflare.OriginResponseDurationMs:
  description: Upstream response time, measured from the first datacenter that receives
    a request. Includes time taken by Argo Smart Routing and Tiered Cache, plus time
    to connect and receive a response from origin servers. This field replaces OriginResponseTime.
    Available in Logpush v2 only.
  name: cloudflare.OriginResponseDurationMs
  type: number

cloudflare.OriginResponseHTTPExpires:
  description: Value of the origin 'expires' header in RFC1123 format
  name: cloudflare.OriginResponseHTTPExpires
  type: keyword

cloudflare.OriginResponseHTTPLastModified:
  description: Value of the origin 'last-modified' header in RFC1123 format
  name: cloudflare.OriginResponseHTTPLastModified
  type: keyword

cloudflare.OriginResponseHeaderReceiveDurationMs:
  description: Time taken for origin to return response headers after Cloudflare finishes
    sending request headers. Available in Logpush v2 only.
  name: cloudflare.OriginResponseHeaderReceiveDurationMs
  type: number

cloudflare.OriginResponseStatus:
  description: Status returned by the origin server. The value 0 means that there
    was no request made to the origin server and the response was served by Cloudflare's
    Edge.
  name: cloudflare.OriginResponseStatus
  type: number

cloudflare.OriginResponseTime:
  description: deprecated)  Number of nanoseconds it took the origin to return the
    response to edge
  name: cloudflare.OriginResponseTime
  type: number

cloudflare.OriginSSLProtocol:
  description: SSL (TLS) protocol used to connect to the origin
  name: cloudflare.OriginSSLProtocol
  type: keyword

cloudflare.OriginTCPHandshakeDurationMs:
  description: Time taken to complete TCP handshake with origin. This will be 0 if
    an origin connection is reused. Available in Logpush v2 only.
  name: cloudflare.OriginTCPHandshakeDurationMs
  type: number

cloudflare.OriginTLSHandshakeDurationMs:
  description: Time taken to complete TLS handshake with origin. This will be 0 if
    an origin connection is reused. Available in Logpush v2 only.
  name: cloudflare.OriginTLSHandshakeDurationMs
  type: number

cloudflare.ParentRayID:
  description: Ray ID of the parent request if this request was made using a Worker
    script
  name: cloudflare.ParentRayID
  type: keyword

cloudflare.RayID:
  description: ID of the request
  name: cloudflare.RayID
  type: keyword

cloudflare.RequestHeaders:
  description: keyword key-value pairs for RequestHeaders
  name: cloudflare.RequestHeaders
  type: object

cloudflare.ResponseHeaders:
  description: keyword key-value pairs for ResponseHeaders
  name: cloudflare.ResponseHeaders
  type: object

cloudflare.SecurityAction:
  description: Rule action of the security rule that triggered a terminating action,
    if any.
  name: cloudflare.SecurityAction
  type: keyword

cloudflare.SecurityActions:
  description: Array of actions that Cloudflare security products performed on this
    request.
  name: cloudflare.SecurityActions
  type: keyword

cloudflare.SecurityLevel:
  description: The security level configured at the time of this request. This is
    used to determine the sensitivity of the IP Reputation system.
  name: cloudflare.SecurityLevel
  type: keyword

cloudflare.SecurityRuleDescription:
  description: Rule description of the security rule that triggered a terminating
    action, if any.
  name: cloudflare.SecurityRuleDescription
  type: keyword

cloudflare.SecurityRuleID:
  description: Rule ID of the security rule that triggered a terminating action, if
    any.
  name: cloudflare.SecurityRuleID
  type: keyword

cloudflare.SecurityRuleIDs:
  description: Array of security rule IDs that matched the request.
  name: cloudflare.SecurityRuleIDs
  type: keyword

cloudflare.SecuritySources:
  description: Array of Cloudflare security products that matched the request.
  name: cloudflare.SecuritySources
  type: keyword

cloudflare.SmartRouteColoID:
  description: The Cloudflare datacenter used to connect to the origin server if Argo
    Smart Routing is used. Available in Logpush v2 only.
  name: cloudflare.SmartRouteColoID
  type: number

cloudflare.UpperTierColoID:
  description: The "upper tier" datacenter that was checked for a cached copy if Tiered
    Cache is used. Available in Logpush v2 only.
  name: cloudflare.UpperTierColoID
  type: number

cloudflare.WAFAction:
  description: Action taken by the WAF, if triggered
  name: cloudflare.WAFAction
  type: keyword

cloudflare.WAFFlags:
  description: '(deprecated)  Additional configuration flags: simulate (0x1)  null'
  name: cloudflare.WAFFlags
  type: keyword

cloudflare.WAFMatchedVar:
  description: deprecated)  The full name of the most-recently matched variable
  name: cloudflare.WAFMatchedVar
  type: keyword

cloudflare.WAFProfile:
  description: low \ med \ high
  name: cloudflare.WAFProfile
  type: keyword

cloudflare.WAFRuleID:
  description: ID of the applied WAF rule
  name: cloudflare.WAFRuleID
  type: keyword

cloudflare.WAFRuleMessage:
  description: Rule message associated with the triggered rule
  name: cloudflare.WAFRuleMessage
  type: keyword

cloudflare.WorkerCPUTime:
  description: Amount of time in microseconds spent executing a worker, if any
  name: cloudflare.WorkerCPUTime
  type: number

cloudflare.WorkerStatus:
  description: Status returned from worker daemon
  name: cloudflare.WorkerStatus
  type: keyword

cloudflare.WorkerSubrequest:
  description: Whether or not this request was a worker subrequest
  name: cloudflare.WorkerSubrequest
  type: bool

cloudflare.WorkerSubrequestCount:
  description: Number of subrequests issued by a worker when handling this request
  name: cloudflare.WorkerSubrequestCount
  type: number

cloudflare.ZoneID:
  description: Internal zone ID
  name: cloudflare.ZoneID
  type: number

cloudflare.ZoneName:
  description: The human-readable name of the zone (e.g. 'cloudflare.com'). Available
    in Logpush v2 only.
  name: cloudflare.ZoneName
  type: keyword
